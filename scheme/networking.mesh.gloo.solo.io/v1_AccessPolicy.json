{
  "definitions" : {
    "networking.mesh.gloo.solo.io.v1.AccessPolicy" : {
      "description" : "Grants communication permission between selected identities (i.e. traffic sources) and Destinations (i.e. destinations).\nExplicitly granted access permission is required if a\n[VirtualMesh's GlobalAccessPolicy]({{% versioned_link_path fromRoot=\"/reference/api/virtual_mesh/#networking.mesh.gloo.solo.io.VirtualMeshSpec.GlobalAccessPolicy\" %}})\nis set to `ENABLED`.",
      "properties" : {
        "allowedMethods" : {
          "description" : "Optional. A list of HTTP methods to allow (e.g., \"GET\", \"POST\").\n       It is ignored in gRPC case because the value is always \"POST\".\n       If not specified, allows any method.",
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "allowedPaths" : {
          "description" : "Optional. A list of HTTP paths or gRPC methods to allow.\n       gRPC methods must be presented as fully-qualified name in the form of\n       \"/packageName.serviceName/methodName\" and are case sensitive.\n       Exact match, prefix match, and suffix match are supported for paths.\n       For example, the path \"/books/review\" matches\n       \"/books/review\" (exact match), \"*books/\" (suffix match), or \"/books*\" (prefix match).\n\n       If not specified, allow any path.",
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "allowedPorts" : {
          "description" : "Optional. A list of ports which to allow.\n       If not set any port is allowed.",
          "items" : {
            "maximum" : 4.294967295E9,
            "minimum" : 0.0,
            "type" : "integer"
          },
          "type" : "array"
        },
        "destinationSelector" : {
          "description" : "Specify the Destinations for which to apply this AccessPolicy.\nLeave empty to apply the AccessPolicy to all Destinations.",
          "items" : {
            "properties" : {
              "kubeServiceMatcher" : {
                "description" : "Match Kubernetes Services by their labels, namespaces, and/or clusters.",
                "properties" : {
                  "clusters" : {
                    "description" : "If specified, match Kubernetes Services if they exist in one of the specified clusters.\n           When used in a networking policy, omission matches any cluster.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any cluster.",
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "If specified, a match requires all labels to exist on a Kubernetes Service.\n           When used in a networking policy, omission matches any labels.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any label key and/or value.",
                    "type" : "object"
                  },
                  "namespaces" : {
                    "description" : "If specified, match Kubernetes Services if they exist in one of the specified namespaces.\n           When used in a networking policy, omission matches any namespace.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any namespace.",
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "kubeServiceRefs" : {
                "description" : "Match Kubernetes Services by direct reference.",
                "properties" : {
                  "services" : {
                    "description" : "Match Kubernetes Services by direct reference. All fields are required.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any value for the given field.",
                    "items" : {
                      "properties" : {
                        "clusterName" : {
                          "description" : "name of the cluster in which the resource exists",
                          "type" : "string"
                        },
                        "name" : {
                          "description" : "name of the resource being referenced",
                          "type" : "string"
                        },
                        "namespace" : {
                          "description" : "namespace of the resource being referenced",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          },
          "type" : "array"
        },
        "sourceSelector" : {
          "description" : "Specify the identities of Workloads (i.e. traffic sources) for which to apply this AccessPolicy.\nLeave empty to apply the AccessPolicy to all Workloads colocated in the destination's Mesh.",
          "items" : {
            "properties" : {
              "kubeIdentityMatcher" : {
                "description" : "Match request identities based on the Kubernetes namespace and cluster.",
                "properties" : {
                  "clusters" : {
                    "description" : "If specified, match a Kubernetes identity if it exists in one of the specified clusters.\n           When used in a networking policy, omission matches any cluster.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any cluster.",
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "namespaces" : {
                    "description" : "If specified, match a Kubernetes identity if it exists in one of the specified namespaces.\n           When used in a networking policy, omission matches any namespace.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any namespace.",
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "kubeServiceAccountRefs" : {
                "description" : "Match request identities based on the Kubernetes service account of the request.",
                "properties" : {
                  "serviceAccounts" : {
                    "description" : "Match Kubernetes service accounts by direct reference.\n           When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any value for the given field.",
                    "items" : {
                      "properties" : {
                        "clusterName" : {
                          "description" : "name of the cluster in which the resource exists",
                          "type" : "string"
                        },
                        "name" : {
                          "description" : "name of the resource being referenced",
                          "type" : "string"
                        },
                        "namespace" : {
                          "description" : "namespace of the resource being referenced",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
  