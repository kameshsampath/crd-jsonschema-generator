{
  "definitions" : {
    "networking.enterprise.mesh.gloo.solo.io.v1beta1.VirtualGateway" : {
      "description" : "VirtualGateway is the top-level object for configuring ingress into a Mesh or VirtualMesh.\n   A single VirtualGateway can apply to multiple deployed ingress pods and sidecars across meshes and clusters contained within a VirtualMesh.\n   VirtualGateways can route traffic to destination services which live in a specific cluster or mesh.\n   This allows VirtualGateways to route traffic from an ingress or sidecar in one mesh to a service in another. In order to\n   perform cross-mesh routing, the Gateway Mesh and Destination mesh must be contained in a single VirtualMesh, with federation enabled.",
      "properties" : {
        "connectionHandlers" : {
          "description" : "Each Gateway must implement one or more ConnectionHandlers.\nA ConnectionHandler instructs the gateway how to handle clients\nwhich have connected to the specified bind address.\nTypically `connectionHandlers` will consist of a single `http` handler\nwhich serves HTTP Routes defined in a set of VirtualHosts.\nMultiple `connectionHandlers` can be specified to provide different behavior\non the same Gateway, e.g. one for TCP and one for HTTP traffic.",
          "items" : {
            "oneOf" : [ {
              "not" : {
                "anyOf" : [ {
                  "required" : [ "http" ]
                }, {
                  "required" : [ "tcp" ]
                } ]
              }
            }, {
              "required" : [ "http" ]
            }, {
              "required" : [ "tcp" ]
            } ],
            "properties" : {
              "connectionMatch" : {
                "description" : "Additional options for matching a connection to a specific gateway.\nThis is required when more than one `connectionHandler` is specified for a single gateway.\nTypically this is used to serve different",
                "properties" : {
                  "serverNames" : {
                    "description" : "If non-empty, a list of server names (e.g. SNI for TLS protocol) to consider when determining\na `connectionMatch`. Those values will be compared against the server names of a new\nconnection, when detected by one of the listener filters.\n\nThe server name will be matched against all wildcard domains, i.e. `www.example.com`\nwill be first matched against `www.example.com`, then `*.example.com`, then ``*.com`.\n\nNote that partial wildcards are not supported, and values like `*w.example.com` are invalid.",
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "transportProtocol" : {
                    "description" : "Protocol",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "connectionOptions" : {
                "description" : "Top level optional configuration for all routes on the ConnectionHandler.",
                "properties" : {
                  "enableProxyProtocol" : {
                    "description" : "enable PROXY protocol for this connection handler.",
                    "type" : "boolean"
                  },
                  "strictFilterManagement" : {
                    "description" : "Restricts filter from being added to the corresponding Envoy Listener unless they are explicitly configured\nin the connection handler options",
                    "type" : "boolean"
                  },
                  "tlsContext" : {
                    "description" : "TODO",
                    "properties" : {
                      "presented" : {
                        "description" : "If specified, the route will match against whether or not a certificate is presented.\nIf not specified, certificate presentation status (true or false) will not be considered when route matching.",
                        "nullable" : true,
                        "type" : "boolean"
                      },
                      "validated" : {
                        "description" : "If specified, the route will match against whether or not a certificate is validated.\nIf not specified, certificate validation status (true or false) will not be considered when route matching.",
                        "nullable" : true,
                        "type" : "boolean"
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "http" : {
                "properties" : {
                  "routeConfig" : {
                    "items" : {
                      "oneOf" : [ {
                        "not" : {
                          "anyOf" : [ {
                            "required" : [ "virtualHostSelector" ]
                          }, {
                            "required" : [ "virtualHost" ]
                          } ]
                        }
                      }, {
                        "required" : [ "virtualHostSelector" ]
                      }, {
                        "required" : [ "virtualHost" ]
                      } ],
                      "properties" : {
                        "virtualHost" : {
                          "description" : "VirtualHost allows in-lining a route table directly in the Gateway Resource, for simple configs using fewer CRDs.\nNote that Kubernetes admission validation of inline virtual hosts is disabled. For production, the use of `virtualHostSelector` is recommended.",
                          "type" : "object",
                          "x-kubernetes-preserve-unknown-fields" : true
                        },
                        "virtualHostSelector" : {
                          "description" : "RouteSelector is used to specify which VirtualHosts should be attached to this gateway.",
                          "properties" : {
                            "expressions" : {
                              "description" : "Expressions allow for more flexible object label matching, such as equality-based requirements, set-based requirements, or a combination of both.\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement",
                              "items" : {
                                "properties" : {
                                  "key" : {
                                    "description" : "Kubernetes label key, must conform to Kubernetes syntax requirements\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set",
                                    "type" : "string"
                                  },
                                  "operator" : {
                                    "description" : "The operator can only be in, notin, =, ==, !=, exists, ! (DoesNotExist), gt (GreaterThan), lt (LessThan).",
                                    "enum" : [ "Equals", "DoubleEquals", "NotEquals", "In", "NotIn", "Exists", "DoesNotExist", "GreaterThan", "LessThan" ],
                                    "type" : "string"
                                  },
                                  "values" : {
                                    "items" : {
                                      "type" : "string"
                                    },
                                    "type" : "array"
                                  }
                                },
                                "type" : "object"
                              },
                              "type" : "array"
                            },
                            "labels" : {
                              "additionalProperties" : {
                                "type" : "string"
                              },
                              "description" : "Select objects whose labels match the ones specified here.",
                              "type" : "object"
                            },
                            "namespaces" : {
                              "description" : "Select Objects in these namespaces. If omitted, Gloo Mesh will only select Objects in the same namespace\nas the parent resource (e.g. VirtualGateway) that owns this selector.\nThe reserved value \"*\" can be used to select objects in all namespaces watched by Gloo Mesh.",
                              "items" : {
                                "type" : "string"
                              },
                              "type" : "array"
                            }
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "routeOptions" : {
                    "description" : "HTTP Listener Options // Root level RouteTable + VirtualHost + routes level",
                    "properties" : {
                      "csrf" : {
                        "description" : "Configure Global CSRF options for clients connected to this Gateway.",
                        "properties" : {
                          "additionalOrigins" : {
                            "description" : "Specifies additional source origins that will be allowed in addition to\nthe destination origin.",
                            "items" : {
                              "oneOf" : [ {
                                "not" : {
                                  "anyOf" : [ {
                                    "required" : [ "exact" ]
                                  }, {
                                    "required" : [ "prefix" ]
                                  }, {
                                    "required" : [ "regex" ]
                                  }, {
                                    "required" : [ "suffix" ]
                                  } ]
                                }
                              }, {
                                "required" : [ "exact" ]
                              }, {
                                "required" : [ "prefix" ]
                              }, {
                                "required" : [ "regex" ]
                              }, {
                                "required" : [ "suffix" ]
                              } ],
                              "properties" : {
                                "exact" : {
                                  "description" : "Exact string match.",
                                  "type" : "string"
                                },
                                "ignoreCase" : {
                                  "description" : "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no effect for the regex match.",
                                  "type" : "boolean"
                                },
                                "prefix" : {
                                  "description" : "Prefix-based match.",
                                  "type" : "string"
                                },
                                "regex" : {
                                  "description" : "ECMAscript style regex-based match.",
                                  "type" : "string"
                                },
                                "suffix" : {
                                  "description" : "Suffix-based match.",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          },
                          "filterEnabled" : {
                            "description" : "Specifies that CSRF policies will be evaluated, tracked and enforced.",
                            "type" : "boolean"
                          },
                          "percentage" : {
                            "description" : "Specifies the % of requests for which the CSRF filter is enabled or when shadow mode is enabled the % of requests\nevaluated and tracked, but not enforced.\n\nIf filter_enabled or shadow_enabled is true.\nEnvoy will lookup the runtime key to get the percentage of requests to filter.\n\n.. note:: This field defaults to 100",
                            "format" : "double",
                            "type" : "number"
                          },
                          "shadowEnabled" : {
                            "description" : "Specifies that CSRF policies will be evaluated and tracked, but not enforced.\n\nThis is intended to be used when ``filter_enabled`` is false and will be ignored otherwise.",
                            "type" : "boolean"
                          }
                        },
                        "type" : "object"
                      },
                      "extauth" : {
                        "description" : "Configure the Global Extauth options for clients connected to this Gateway",
                        "properties" : {
                          "todo" : {
                            "description" : "TODO: extauth",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "rateLimit" : {
                        "description" : "Configure Global Rate limit options for clients connected to this Gateway.\nRate limits must be configured on specific routes in order to enable rate limiting for a Gateway.",
                        "properties" : {
                          "denyOnFail" : {
                            "type" : "boolean"
                          },
                          "rateLimitBeforeAuth" : {
                            "description" : "Set this is set to true if you would like to rate limit traffic before applying external auth to it.\n*Note*: When this is true, you will lose some features like being able to rate limit a request based on its auth state",
                            "type" : "boolean"
                          },
                          "ratelimitServerRef" : {
                            "properties" : {
                              "name" : {
                                "description" : "name of the resource being referenced",
                                "type" : "string"
                              },
                              "namespace" : {
                                "description" : "namespace of the resource being referenced",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "requestTimeout" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "tcp" : {
                "properties" : {
                  "options" : {
                    "description" : "TCP Gateway configuration",
                    "properties" : {
                      "tcpProxySettings" : {
                        "properties" : {
                          "idleTimeout" : {
                            "type" : "string"
                          },
                          "maxConnectAttempts" : {
                            "description" : "Contains various settings for Envoy's tcp proxy filter.\nSee here for more information: https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/config/filter/network/tcp_proxy/v2/tcp_proxy.proto#envoy-api-msg-config-filter-network-tcp-proxy-v2-tcpproxy",
                            "maximum" : 4.294967295E9,
                            "minimum" : 0.0,
                            "nullable" : true,
                            "type" : "integer"
                          },
                          "tunnelingConfig" : {
                            "description" : "If set, this configures tunneling, e.g. configuration options to tunnel multiple TCP\npayloads over a shared HTTP tunnel. If this message is absent, the payload\nwill be proxied upstream as per usual.",
                            "properties" : {
                              "hostname" : {
                                "description" : "The hostname to send in the synthesized CONNECT headers to the upstream proxy.",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "type" : "object"
                  },
                  "tcpHosts" : {
                    "description" : "TCP hosts that the gateway can route to",
                    "items" : {
                      "properties" : {
                        "destination" : {
                          "oneOf" : [ {
                            "not" : {
                              "anyOf" : [ {
                                "required" : [ "static" ]
                              }, {
                                "required" : [ "virtual" ]
                              }, {
                                "required" : [ "kube" ]
                              }, {
                                "required" : [ "forwardSniClusterName" ]
                              } ]
                            }
                          }, {
                            "required" : [ "static" ]
                          }, {
                            "required" : [ "virtual" ]
                          }, {
                            "required" : [ "kube" ]
                          }, {
                            "required" : [ "forwardSniClusterName" ]
                          } ],
                          "properties" : {
                            "forwardSniClusterName" : {
                              "description" : "Forwards the request to a cluster name matching the TLS SNI name\nhttps://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/network/sni_cluster/empty/sni_cluster\nNote: This filter will only work properly with TLS connections in which the upstream SNI domain is specified",
                              "maxProperties" : 0,
                              "type" : "object"
                            },
                            "kube" : {
                              "description" : "Reference to a Kubernetes Service. Note that the service must exist in the same mesh or virtual mesh (with federation enabled) as\neach gateway workload which routes to this destination.",
                              "properties" : {
                                "clusterName" : {
                                  "description" : "name of the cluster in which the resource exists",
                                  "type" : "string"
                                },
                                "name" : {
                                  "description" : "name of the resource being referenced",
                                  "type" : "string"
                                },
                                "namespace" : {
                                  "description" : "namespace of the resource being referenced",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "static" : {
                              "description" : "Reference to a gloo mesh Static Destination",
                              "properties" : {
                                "name" : {
                                  "description" : "name of the resource being referenced",
                                  "type" : "string"
                                },
                                "namespace" : {
                                  "description" : "namespace of the resource being referenced",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "virtual" : {
                              "description" : "Reference to a gloo mesh VirtualDestination",
                              "properties" : {
                                "name" : {
                                  "description" : "name of the resource being referenced",
                                  "type" : "string"
                                },
                                "namespace" : {
                                  "description" : "namespace of the resource being referenced",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "weight" : {
                              "description" : "Relative weight of this destination to others in the same route.\nIf omitted, all destinations in the route will be load balanced between evenly.",
                              "maximum" : 4.294967295E9,
                              "minimum" : 0.0,
                              "type" : "integer"
                            }
                          },
                          "type" : "object"
                        },
                        "name" : {
                          "description" : "the logical name of the tcp host. names must be unique for each tcp host within a listener",
                          "type" : "string"
                        },
                        "sslConfig" : {
                          "description" : "If provided, the Gateway will serve TLS/SSL traffic for this set of routes",
                          "oneOf" : [ {
                            "not" : {
                              "anyOf" : [ {
                                "required" : [ "secretRef" ]
                              }, {
                                "required" : [ "sslFiles" ]
                              }, {
                                "properties" : {
                                  "sds" : {
                                    "oneOf" : [ {
                                      "not" : {
                                        "anyOf" : [ {
                                          "required" : [ "callCredentials" ]
                                        }, {
                                          "required" : [ "clusterName" ]
                                        } ]
                                      }
                                    }, {
                                      "required" : [ "callCredentials" ]
                                    }, {
                                      "required" : [ "clusterName" ]
                                    } ]
                                  }
                                },
                                "required" : [ "sds" ]
                              } ]
                            }
                          }, {
                            "required" : [ "secretRef" ]
                          }, {
                            "required" : [ "sslFiles" ]
                          }, {
                            "properties" : {
                              "sds" : {
                                "oneOf" : [ {
                                  "not" : {
                                    "anyOf" : [ {
                                      "required" : [ "callCredentials" ]
                                    }, {
                                      "required" : [ "clusterName" ]
                                    } ]
                                  }
                                }, {
                                  "required" : [ "callCredentials" ]
                                }, {
                                  "required" : [ "clusterName" ]
                                } ]
                              }
                            },
                            "required" : [ "sds" ]
                          } ],
                          "properties" : {
                            "alpnProtocols" : {
                              "description" : "Set Application Level Protocol Negotiation\nIf empty, defaults to [\"h2\", \"http/1.1\"].",
                              "items" : {
                                "type" : "string"
                              },
                              "type" : "array"
                            },
                            "parameters" : {
                              "properties" : {
                                "cipherSuites" : {
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "type" : "array"
                                },
                                "ecdhCurves" : {
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "type" : "array"
                                },
                                "maximumProtocolVersion" : {
                                  "enum" : [ "TLS_AUTO", "TLSv1_0", "TLSv1_1", "TLSv1_2", "TLSv1_3" ],
                                  "type" : "string"
                                },
                                "minimumProtocolVersion" : {
                                  "enum" : [ "TLS_AUTO", "TLSv1_0", "TLSv1_1", "TLSv1_2", "TLSv1_3" ],
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "sds" : {
                              "description" : "Use secret discovery service.",
                              "properties" : {
                                "callCredentials" : {
                                  "description" : "Call credentials.",
                                  "properties" : {
                                    "fileCredentialSource" : {
                                      "description" : "Call credentials are coming from a file,",
                                      "properties" : {
                                        "header" : {
                                          "description" : "Header to carry the token.",
                                          "type" : "string"
                                        },
                                        "tokenFileName" : {
                                          "description" : "File containing auth token.",
                                          "type" : "string"
                                        }
                                      },
                                      "type" : "object"
                                    }
                                  },
                                  "type" : "object"
                                },
                                "certificatesSecretName" : {
                                  "description" : "The name of the secret containing the certificate",
                                  "type" : "string"
                                },
                                "clusterName" : {
                                  "description" : "The name of the sds cluster in envoy",
                                  "type" : "string"
                                },
                                "targetUri" : {
                                  "description" : "Target uri for the sds channel. currently only a unix domain socket is supported.",
                                  "type" : "string"
                                },
                                "validationContextName" : {
                                  "description" : "The name of secret containing the validation context (i.e. root ca)",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "secretRef" : {
                              "description" : "SecretRef contains the secret ref to a gloo tls secret or a kubernetes tls secret.\ngloo tls secret can contain a root ca as well if verification is needed.",
                              "properties" : {
                                "name" : {
                                  "description" : "name of the resource being referenced",
                                  "type" : "string"
                                },
                                "namespace" : {
                                  "description" : "namespace of the resource being referenced",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "sniDomains" : {
                              "description" : "optional. the SNI domains that should be considered for TLS connections",
                              "items" : {
                                "type" : "string"
                              },
                              "type" : "array"
                            },
                            "sslFiles" : {
                              "description" : "SSLFiles reference paths to certificates which are local to the proxy",
                              "properties" : {
                                "rootCa" : {
                                  "description" : "for client cert validation. optional",
                                  "type" : "string"
                                },
                                "tlsCert" : {
                                  "type" : "string"
                                },
                                "tlsKey" : {
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "verifySubjectAltName" : {
                              "description" : "Verify that the Subject Alternative Name in the peer certificate is one of the specified values.\nnote that a root_ca must be provided if this option is used.",
                              "items" : {
                                "type" : "string"
                              },
                              "type" : "array"
                            }
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          },
          "type" : "array"
        },
        "deployToIngressGateways" : {
          "description" : "deploy this VirtualGateway to one or more Ingress Gateway workloads\n{{/* TODO: evaluate supporting multiple ingress gateway deployments per VG */}}",
          "properties" : {
            "bindAddress" : {
              "description" : "The bind address the gateway should serve traffic on\nThis maps to the Envoy Listener address.\nDefaults to \"::\" or \"0.0.0.0\".",
              "type" : "string"
            },
            "bindPort" : {
              "description" : "The bind port where the gateway workload will listen for connections.\nThis maps to the Envoy Listener port.",
              "maximum" : 4.294967295E9,
              "minimum" : 0.0,
              "type" : "integer"
            },
            "gatewayWorkloads" : {
              "description" : "Select which gateway workloads (Envoy pods / Istio ingress-gateways