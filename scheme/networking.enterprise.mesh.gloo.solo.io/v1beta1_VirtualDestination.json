{
  "definitions" : {
    "networking.enterprise.mesh.gloo.solo.io.v1beta1.VirtualDestination" : {
      "description" : "A VirtualDestination creates a new hostname to which client workloads can send requests.\n   The hostname abstracts over a set of underlying Destinations and provides failover functionality between them.\n   Failover order is determined by either an explicitly defined priority (`static`), or a list of locality directives (`localized`).\n\n   Each Destination backing the VirtualDestination must be configured with a\n   [TrafficPolicy's outlier detection]({{< versioned_link_path fromRoot=\"/reference/api/github.com.solo-io.gloo-mesh.api.networking.v1.traffic_policy/\" >}}).\n   Currently this feature only supports Destinations backed by Istio.",
      "properties" : {
        "hostname" : {
          "description" : "The DNS name of the VirtualDestination. Must be unique within the service mesh instance.",
          "type" : "string"
        },
        "localized" : {
          "description" : "Failover priority is determined by the localities of the traffic source and Destination.",
          "properties" : {
            "destinationSelectors" : {
              "description" : "Selectors for the Destinations backing the VirtualDestination.\nAll Destinations must be either in the same mesh or in meshes that are grouped under a common VirtualMesh.\nCurrently only one Destination per cluster can be selected, more than one per cluster will be considered invalid.\nRequired, cannot be omitted.",
              "items" : {
                "properties" : {
                  "kubeServiceMatcher" : {
                    "description" : "Match Kubernetes Services by their labels, namespaces, and/or clusters.",
                    "properties" : {
                      "clusters" : {
                        "description" : "If specified, match Kubernetes Services if they exist in one of the specified clusters.\n           When used in a networking policy, omission matches any cluster.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any cluster.",
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "If specified, a match requires all labels to exist on a Kubernetes Service.\n           When used in a networking policy, omission matches any labels.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any label key and/or value.",
                        "type" : "object"
                      },
                      "namespaces" : {
                        "description" : "If specified, match Kubernetes Services if they exist in one of the specified namespaces.\n           When used in a networking policy, omission matches any namespace.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any namespace.",
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      }
                    },
                    "type" : "object"
                  },
                  "kubeServiceRefs" : {
                    "description" : "Match Kubernetes Services by direct reference.",
                    "properties" : {
                      "services" : {
                        "description" : "Match Kubernetes Services by direct reference. All fields are required.\n           When used in a Gloo Mesh Role, a wildcard (`\"*\"`) must be specified to match any value for the given field.",
                        "items" : {
                          "properties" : {
                            "clusterName" : {
                              "description" : "name of the cluster in which the resource exists",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "name of the resource being referenced",
                              "type" : "string"
                            },
                            "namespace" : {
                              "description" : "namespace of the resource being referenced",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "type" : "array"
            },
            "failoverDirectives" : {
              "description" : "Directives describing the locality failover behavior.",
              "items" : {
                "properties" : {
                  "from" : {
                    "description" : "The locality of the client workload.",
                    "properties" : {
                      "region" : {
                        "description" : "The locality's region.",
                        "type" : "string"
                      },
                      "subZone" : {
                        "description" : "The locality's sub-zone. Currently this value is not used.",
                        "type" : "string"
                      },
                      "zone" : {
                        "description" : "The locality's zone. Currently this value is not used.",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "to" : {
                    "description" : "The list of Destination localities that can be routed to if the instance local to the client workload is not available.",
                    "items" : {
                      "properties" : {
                        "region" : {
                          "description" : "The locality's region.",
                          "type" : "string"
                        },
                        "subZone" : {
                          "description" : "The locality's sub-zone. Currently this value is not used.",
                          "type" : "string"
                        },
                        "zone" : {
                          "description" : "The locality's zone. Currently this value is not used.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "type" : "array"
            },
            "outlierDetection" : {
              "description" : "Outlier detection to determine the health of the selected services.\nIf not set will default to the following:\nconsecutiveGatewayErrors: 10\nconsecutive5XXErrors: 10\ninterval: 5s\nbaseEjectionTime: 120s",
              "properties" : {
                "baseEjectionTime" : {
                  "description" : "The minimum ejection duration. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.",
                  "type" : "string"
                },
                "consecutiveErrors" : {
                  "description" : "The number of errors before a host is ejected from the connection pool. A default will be used if not set.",
                  "maximum" : 4.294967295E9,
                  "minimum" : 0.0,
                  "type" : "integer"
                },
                "interval" : {
                  "description" : "The time interval between ejection sweep analysis. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.",
                  "type" : "string"
                },
     